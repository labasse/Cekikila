@page "/emprunts/{IdObjet:int?}"

@inject HttpClient http
@inject NavigationManager nav

<div class="container">
    @if(objet is null)
    {
        <p>Chargement en cours...</p>
    }
    else
    {
        <h3>@objet.Nom</h3>

        <Periode @bind-Debut="@NouvDebut" @bind-Fin="@NouvFin" FinModifiable="false" @ref="filtre"/>
        @if(NouvDebut < TodayOnly)
        {
            <div class="alert alert-danger" role="alert">
                Date passée !
            </div>
        }
        <Tableau Items="objet.Tags" Context="tag">
            <Header>
                <th>Id</th>
                <th>Titre</th>
            </Header>
            <ItemTemplate>
                <td>-</td>
                <td>@tag</td>
            </ItemTemplate>
        </Tableau>
    }
</div>

@code {
    private Periode? filtre;
    private ObjetDto? objet = null;

    private DateOnly TodayOnly => DateOnly.FromDateTime(DateTime.Today);

    private DateOnly NouvDebut = DateOnly.FromDateTime(DateTime.Today);

    private DateOnly NouvFin = DateOnly.FromDateTime(DateTime.Today).AddDays(5);

    [Parameter]
    public int? IdObjet { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        // TODO : Gérer l'appel à la page sans paramètre
        if(IdObjet is not null) 
        {
            var reponse = await http.GetAsync($"api/objet/{IdObjet}");

            if(reponse.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                // Redirection en Blazor
                nav.NavigateTo("/404", false);
            }
            else if(reponse.IsSuccessStatusCode)
            {
                objet = await reponse.Content.ReadFromJsonAsync<ObjetDto>();
            }
            else
            {
                objet = null;
                // TODO : Message d'erreur + log
            }
        }
    }
    /*
     * 
    if(objet is null)
                {
                nav.NavigateTo("/404", false);
    }            
        }
            }

    */
}
